'/bootstrap':defAtom(termMap::'/bootstrap':type).
'/bootstrap':signature(uuidDesc(Term,UUID,Role,Map,Features)::Type,[Term::Type,UUID::'/bootstrap':string,Role::'/bootstrap':string,Map::termMap,Features::'/bootstrap':set(feature)]).
'/bootstrap':isDescriptor(uuidDesc(Term,UUID,Role,Map,Features)::Type):-builtin:true.
'/bootstrap':descriptorContent(uuidDesc(Term,UUID,Role,Map,Features)::Type,Term::Type,[]):-builtin:true.
annotation:shrink('/bootstrap':signature(propagateUuidDescriptor(Args,UUID,Code,Map,Features,PropArgs)::'/bootstrap':pred,[Args::'/bootstrap':list('/bootstrap':typedTerm),UUID::'/bootstrap':string,Code::'/bootstrap':number,Map::termMap,Features::'/bootstrap':set(feature),PropArgs::'/bootstrap':list('/bootstrap':typedTerm)])).
annotation:shrink((propagateUuidDescriptor([],_,_,_,_,[]):-builtin:true)).
annotation:shrink((propagateUuidDescriptor([Arg::Type|TArgs],UUID,Code,Map,Features,[uuidDesc(Arg,ChildUUID,ChildRole,Map,Features)::Type|PropArgs]):-builtin:charCodes(RoleChar,[Code]),'/Functional':eval('/Functional':applyBinOp('/Functional':const(UUID),'/Functional':concat,'/Functional':const(RoleChar)),'/bootstrap':string,ChildUUID),'/Functional':eval('/Functional':applyBinOp('/Functional':const(UUID),'/Functional':concat,'/Functional':applyBinOp('/Functional':const(! (-)),'/Functional':concat,'/Functional':const(RoleChar))),'/bootstrap':string,ChildRole),builtin:succ(Code,NextCode),propagateUuidDescriptor(TArgs,UUID,NextCode,Map,Features,PropArgs))).
annotation:shrink(('/cedalionWeb/visualization':propagateDescriptor(uuidDesc(Term,UUID,Role,Map,Features)::Type,PropDesc::Type,[]):-builtin:if(builtin:compound(Term::Type), ('/bootstrap':safeParseTerm(Term::Type,Name,Args),propagateUuidDescriptor(Args,UUID,65,Map,Features,PropArgs),builtin:parseTerm(PropDesc::Type,Name,PropArgs)),PropDesc::Type=Term::Type))).
'/javascript/jsLogic':procedure('/cedalionWeb/visualization':bind(uuidDesc(Term,UUID,Role,Map,Features)::Type,Elem,Mode),'/javascript/jsLogic':jsCommand([annotation:comment('/javascript':if('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Map::termMap),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string)),['/javascript':var(MapEntry,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Map::termMap),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string))),'/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':replaceWith(Elem,'/cedalionWeb/visualization':toHTML(cpi:vis(uuidDesc('/javascript/jsLogic':jsExpr('/javascript':dot('/javascript':varExpr(MapEntry),!term)),'/javascript/jsLogic':jsExpr('/javascript':dot('/javascript':varExpr(MapEntry),!uuid)),!'',Map,Features)::Type,Mode)))),annotation:comment('/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr('/javascript/jsLogic':jQuery),['/javascript':op('/javascript':str(!'[ced_uuid="'),'/javascript':plus,'/javascript':op('/javascript':dot('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Map::termMap),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string)),!uuid),'/javascript':plus,'/javascript':str(!'"]')))]),!attr),['/javascript':str(!ced_role),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string)])),!'We patch the role after constructing the HTML to avoid an infinite loop resulting from re-evaluating the same role over and over again')],['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_uuid),'/javascript/jsLogic':inlineTerm(UUID::'/bootstrap':string)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_role),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!data),['/javascript':str(!ced_type),'/javascript/jsLogic':inlineTerm(Type::'/bootstrap':type)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!data),['/javascript':str(!ced_features),'/javascript/jsLogic':inlineTerm(Features::'/bootstrap':set(feature))])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!data),['/javascript':str(!ced_mode),'/javascript/jsLogic':inlineTerm(Mode::'/bootstrap':mode)])),'/javascript':if('/javascript':op('/javascript/jsLogic':inlineTerm(Term::Type),'/javascript':instanceof,'/javascript':varExpr('/cedalionWeb':'Array')),['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!addClass),['/javascript':str(!'ced-compound')])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_name),'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Term::Type),'/javascript':const(0))])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_arity),'/javascript':op('/javascript':dot('/javascript/jsLogic':inlineTerm(Term::Type),!length),'/javascript':minus,'/javascript':const(1))]))],['/javascript':if('/javascript':op('/javascript/jsLogic':typeof('/javascript/jsLogic':inlineTerm(Term::Type)),'/javascript':ne,'/javascript':str(!object)),['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!addClass),['/javascript':str(!'ced-value')])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!data),['/javascript':str(!ced_value),'/javascript/jsLogic':inlineTerm(Term::Type)]))],[])]),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/bootstrap':member(Feature,Features,feature),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure(bindFeature(Feature,Elem))])))]),!'if the current role appears in the map, we replace the content with the one in the map.')])).
'/javascript/jsLogic':procedure(test:uuidDesc,'/javascript/jsLogic':jsCommand(['/javascript':var(Map,'/javascript':json(annotation:changeMode(['/javascript':bind('/javascript':str(!'foo.ced#root'),'/javascript':json(['/javascript':bind('/javascript':str(!term),'/javascript/jsLogic':inlineTerm([1,2]::'/bootstrap':list('/bootstrap':number))),'/javascript':bind('/javascript':str(!uuid),'/javascript':str(!abc))])),'/javascript':bind('/javascript':str(!'abcB-A'),'/javascript':json(['/javascript':bind('/javascript':str(!term),'/javascript/jsLogic':inlineTerm(3::'/bootstrap':number)),'/javascript':bind('/javascript':str(!uuid),'/javascript':str(!efg))]))],'/bootstrap':vert))),'/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':openPage('/cedalionWeb/visualization':toHTML('/bootstrap':vis(uuidDesc([],!'foo.ced',!'foo.ced#root','/javascript/jsLogic':jsExpr('/javascript':varExpr(Map)),'/bootstrap':listSet([]))::'/bootstrap':list('/bootstrap':number))))),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'(matchUUID('/Functional':const(!'foo.ced#root'),[X|Y]::'/bootstrap':list('/bootstrap':number)),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(X::'/bootstrap':number)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(Y::'/bootstrap':list('/bootstrap':number))]))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([])))),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'(termForRole('/Functional':const(!'foo.ced#root'),TTerm),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(TTerm::'/bootstrap':typedTerm)]))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])).
