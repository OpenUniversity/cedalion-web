'/javascript/jsLogic':procedure(newUUID(Model,Role,UUID,uuidLink(LinkedUUID)),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(typeForRole(Model,Role,ExpectedType),'/javascript/statepred':conj(termForRole(Role,Model,Content::ActualType,2),'/javascript/statepred':pred((\+ExpectedType::'/bootstrap':type=ActualType::'/bootstrap':type,'/bootstrap':checkAdapter(Content::ActualType,Adapter::ExpectedType))))),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen(modifyModel(Role,Model,Content::ActualType,Adapter::ExpectedType),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])).
'/javascript/jsLogic':procedure(modelUpdated(Model,Role,_,_),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(typeForRole(Model,Role,ExpectedType),'/javascript/statepred':conj(termForRole(Role,Model,Content::ActualType,2),'/javascript/statepred':pred((\+ExpectedType::'/bootstrap':type=ActualType::'/bootstrap':type,'/bootstrap':checkAdapter(Content::ActualType,Adapter::ExpectedType))))),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen(modifyModel(Role,Model,Content::ActualType,Adapter::ExpectedType),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])).
