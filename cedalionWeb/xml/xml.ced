'/bootstrap':defAtom(xml::'/bootstrap':type).
'/bootstrap':signature(gen(XML)::'/javascript/statepred':stateExpr('/bootstrap':string),[XML::xml]).
'/bootstrap':signature(generates(XML,Str)::'/javascript/statepred':statePred,[XML::xml,Str::'/bootstrap':string]).
'/bootstrap':projection(generates(XML,Str)::'/javascript/statepred':statePred,'/bootstrap':horiz(['/bootstrap':vis(XML::xml),'/bootstrap':label(!generates),'/bootstrap':vis(Str::'/bootstrap':string)])).
'/javascript/statepred':stateExprDef(gen(XML),'/javascript/statepred':where('/javascript/statepred':expr('/Functional':const(Str)),generates(XML,Str)),'/bootstrap':string).
'/bootstrap':defAtom(attr::'/bootstrap':type).
'/bootstrap':signature(attr(Name,Value)::attr,[Name::'/bootstrap':string,Value::'/javascript/statepred':stateExpr('/bootstrap':string)]).
'/bootstrap':projection(attr(Name,Value)::attr,'/bootstrap':horiz(['/bootstrap':vis(Name::'/bootstrap':string),'/bootstrap':label(! (=)),'/bootstrap':vis(Value::'/javascript/statepred':stateExpr('/bootstrap':string))])).
'/bootstrap':adapter(Name::'/bootstrap':string,attr(Name,Value)::attr).
'/bootstrap':adapter(Name::'/bootstrap':string,[attr(Name,Value)]::'/bootstrap':list(attr)).
'/bootstrap':signature(genAttr(Attr)::'/javascript/statepred':stateExpr('/bootstrap':string),[Attr::'/bootstrap':list(attr)]).
'/javascript/statepred':stateExprDef(genAttr([]),'/javascript/statepred':expr('/Functional':const(!'')),'/bootstrap':string).
'/javascript/statepred':stateExprDef(genAttr([attr(Name,Value)|Rest]),'/javascript/statepred':stateApplyBinOp('/javascript/statepred':jsFunction('/javascript/jsLogic':jsExpr(annotation:shrink('/javascript':function([ValuePrime],['/javascript':return('/javascript':op('/javascript':op('/javascript':str(!' '),'/javascript':plus,'/javascript/jsLogic':inlineTerm(Name::'/bootstrap':string)),'/javascript':plus,'/javascript':op('/javascript':str(!'="'),'/javascript':plus,'/javascript':op('/javascript':varExpr(ValuePrime),'/javascript':plus,'/javascript':str(!'"')))))]))),Value,'/bootstrap':string),'/Functional':concat,genAttr(Rest)),'/bootstrap':string).
'/bootstrap':signature(elem(Name,Attr,Body)::xml,[Name::'/Functional':expr('/bootstrap':string),Attr::'/bootstrap':list(attr),Body::xml]).
'/bootstrap':projection(elem(Name,Attr,Body)::xml,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(! (<)),'/bootstrap':vis(Name::'/Functional':expr('/bootstrap':string)),cpi:vis(Attr::'/bootstrap':list(attr),'/bootstrap':horizontal(32,32,'/bootstrap':label(!' '),'/bootstrap':label(!' '))),'/bootstrap':label(! (>))]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Body::xml)]),'/bootstrap':horiz(['/bootstrap':label(!'</'),'/bootstrap':vis(Name::'/Functional':expr('/bootstrap':string)),'/bootstrap':label(! (>))])])).
'/bootstrap':projection(elem(Name,Attr,Body)::xml,'/bootstrap':shrink,'/bootstrap':horiz(['/bootstrap':label(! (<)),'/bootstrap':vis(Name::'/Functional':expr('/bootstrap':string)),cpi:vis(Attr::'/bootstrap':list(attr),'/bootstrap':horizontal(32,32,'/bootstrap':label(!' '),'/bootstrap':label(!' '))),'/bootstrap':label(! (>)),'/bootstrap':vis(Body::xml),'/bootstrap':label(!'</'),'/bootstrap':vis(Name::'/Functional':expr('/bootstrap':string)),'/bootstrap':label(! (>))])).
'/bootstrap':defAtom(empty::xml).
'/bootstrap':projection(empty::xml,'/bootstrap':horiz([])).
'/javascript/statepred':clause(generates(empty,!''),'/javascript/statepred':pred(builtin:true)).
'/bootstrap':alias(elem('/Functional':const(!name),[],empty)::xml,!'</>').
'/javascript/statepred':def(generates(elem(Name,Attr,Body),Str),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/statepred':whenever('/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval(Name,'/bootstrap':string,NamePrime)),'/javascript/statepred':conj('/javascript/statepred':stateEval(genAttr(Attr),'/bootstrap':string,AttrPrime),generates(Body,BodyPrime))),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Str::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':op('/javascript':op('/javascript':op('/javascript':op('/javascript':op('/javascript':op('/javascript':op('/javascript':str(! (<)),'/javascript':plus,'/javascript/jsLogic':inlineTerm(NamePrime::'/bootstrap':string)),'/javascript':plus,'/javascript/jsLogic':inlineTerm(AttrPrime::'/bootstrap':string)),'/javascript':plus,'/javascript':str(! (>))),'/javascript':plus,'/javascript/jsLogic':inlineTerm(BodyPrime::'/bootstrap':string)),'/javascript':plus,'/javascript':str(!'</')),'/javascript':plus,'/javascript/jsLogic':inlineTerm(NamePrime::'/bootstrap':string)),'/javascript':plus,'/javascript':str(! (>))))::'/bootstrap':string,Action))]),Finally))])).
'/javascript/statepred':unitTest(generates(elem('/Functional':const(!input),[attr(!type,'/javascript/statepred':expr('/Functional':const(!text)))],empty),!'<input type="text"></input>')).
'/bootstrap':signature(str(Str)::xml,[Str::'/bootstrap':string]).
'/bootstrap':projection(str(Str)::xml,'/bootstrap':horiz(['/bootstrap':halfSize('/bootstrap':label(!str)),'/bootstrap':vis(Str::'/bootstrap':string)])).
'/bootstrap':adapter(Str::'/bootstrap':string,str(Str)::xml).
annotation:comment('/javascript/statepred':clause(generates(str(Str),Str),'/javascript/statepred':pred(builtin:true)),!'TODO: Add XML encoding').
'/bootstrap':signature(entity(Code)::xml,[Code::'/Functional':expr('/bootstrap':number)]).
'/bootstrap':projection(entity(Code)::xml,'/bootstrap':horiz(['/bootstrap':label(!'&#'),'/bootstrap':vis(Code::'/Functional':expr('/bootstrap':number)),'/bootstrap':label(! (;))])).
'/javascript/statepred':def(generates(entity(Code),Str),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/Functional':eval(Code,'/bootstrap':number,CodePrime),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Str::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':op('/javascript':str(!'&#'),'/javascript':plus,'/javascript':op('/javascript/jsLogic':inlineTerm(CodePrime::'/bootstrap':number),'/javascript':plus,'/javascript':str(! (;)))))::'/bootstrap':string,Action))]))),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Finally))])).
