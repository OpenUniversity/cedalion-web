'/bootstrap':signature(genAttrTrans(Attrs)::'/Functional':expr('/bootstrap':string),[Attrs::'/bootstrap':list(attr)]).
'/Functional':def(genAttrTrans([]),'/bootstrap':string,'/Functional':const(!'')).
'/Functional':def(genAttrTrans([attr(Name,Value)|Rest]),'/bootstrap':string,'/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(!' '),'/Functional':concat,'/Functional':const(Name)),'/Functional':concat,'/Functional':const(!'="')),'/Functional':concat,'/Functional':if(Value::'/javascript/statepred':stateExpr('/bootstrap':string)='/javascript/statepred':expr(ValuePrime)::'/javascript/statepred':stateExpr('/bootstrap':string),ValuePrime,'/Functional':const(! (?)))),'/Functional':concat,'/Functional':const(!'"')),'/Functional':concat,genAttrTrans(Rest))).
'generates2'(elem(Name,Attrs,Body),Str,Annot1,Annot2):-'/Functional':eval('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(! (<)),'/Functional':concat,Name),'/Functional':concat,genAttrTrans(Attrs)),'/Functional':concat,'/Functional':const(! (>))),'/Functional':concat,'gen2'(Body,Annot1,Annot2)),'/Functional':concat,'/Functional':const(!'</')),'/Functional':concat,Name),'/Functional':concat,'/Functional':const(! (>))),'/bootstrap':string,Str).
'/bootstrap':signature('elemToElem2'(Elem,Elem2)::'/bootstrap':pred,[Elem::xml,Elem2::xml]).
'elemToElem2'(elem(Name,Attrs,Body),'elem2'(Name,AttrsPrime,Body)):- \+builtin:var(Attrs::'/bootstrap':list(attr)),transformAttrs(Attrs,AttrsPrime).
'/bootstrap':signature(transformAttrs(Attrs,AttrsPrime)::'/bootstrap':pred,[Attrs::'/bootstrap':list(attr),AttrsPrime::'/bootstrap':list(attribute)]).
transformAttrs([],[]):-builtin:true.
transformAttrs([attr(Name,Value)|Rest],['attr2'('/Functional':const(Name),ValuePrime)|RestPrime]):-builtin:if(Value::'/javascript/statepred':stateExpr('/bootstrap':string)='/javascript/statepred':expr(ValuePrime)::'/javascript/statepred':stateExpr('/bootstrap':string),builtin:true,ValuePrime::'/Functional':expr('/bootstrap':string)='/Functional':const(! (?))::'/Functional':expr('/bootstrap':string)),transformAttrs(Rest,RestPrime).
'/bootstrap':check(Path,Elem::xml,VNs,'/bootstrap':marker(Path,'/bootstrap':tip(cpi:edit(Path,Elem2::xml,VNs)))):- \+builtin:var(Elem::xml),'elemToElem2'(Elem,Elem2).
'/javascript/statepred':clause(generates('elem2'(Name,Attrs,Body),S),'/javascript/statepred':stateEval('/javascript/statepred':stateApplyBinOp('/javascript/statepred':stateApplyBinOp('/javascript/statepred':expr('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(! (<)),'/Functional':concat,Name),'/Functional':concat,'genAttr2'(Attr)),'/Functional':concat,'/Functional':const(! (>)))),'/Functional':concat,gen(Body)),'/Functional':concat,'/javascript/statepred':expr('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(!'</'),'/Functional':concat,Name),'/Functional':concat,'/Functional':const(! (>))))),'/bootstrap':string,S)).
