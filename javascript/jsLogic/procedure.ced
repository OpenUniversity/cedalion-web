'/bootstrap':defAtom(procedure::'/bootstrap':type).
'/bootstrap':signature(procedure(Proc,Body)::'/bootstrap':statement,[Proc::procedure,Body::jsCommand]).
'/bootstrap':projection(procedure(Proc,Body)::'/bootstrap':statement,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!procedure),'/bootstrap':vis(Proc::procedure),'/bootstrap':label(!'{')]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Body::jsCommand)]),'/bootstrap':label(!'}')])).
'/bootstrap':signature(cjs:procedureCommand(Proc,Command)::'/bootstrap':pred,[Proc::procedure,Command::jsCommand]).
procedure(Proc,Command)~>cjs:procedureCommand(Proc,ConcreteCommand):-builtin:concreteCommand(Command,ConcreteCommand).
'/bootstrap':defines((cjs:procedureCommand(Proc,Command):-_),Proc::procedure,'/bootstrap':semanticDefinition).
'/bootstrap':signature(builtin:concreteCommand(Command,ConcreteCommand)::'/bootstrap':pred,[Command::jsCommand,ConcreteCommand::jsCommand]).
'/bootstrap':defAtom(main::procedure).
'/bootstrap':defAtom(console::'/javascript':symbol).
'/bootstrap':signature(runProcedure(Proc)::'/javascript':statement,[Proc::procedure]).
'/bootstrap':projection(runProcedure(Proc)::'/javascript':statement,'/bootstrap':raised('/bootstrap':lineBorder('/bootstrap':background('/bootstrap':vis(Proc::procedure),cpi:rgb(255,255,255)),5,cpi:rgb(255,255,255)))).
'/bootstrap':adapter(Proc::procedure,runProcedure(Proc)::'/javascript':statement).
'/bootstrap':adapter(Proc::procedure,jsCommand([runProcedure(Proc)])::jsCommand).
annotation:shrink(('/javascript':hasSpecialRendering(runProcedure(Proc)::'/javascript':statement,Str):-'/Functional':eval('/javascript':toString('/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(logic),!runProcedure),[inlineTerm(Proc::procedure)]))::'/javascript':statement),'/bootstrap':string,Str))).
procedure(main,jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(console),!log),['/javascript':str(!'hello, world')]))])).
'/bootstrap':signature('main2'(Str)::procedure,[Str::'/bootstrap':string]).
'/bootstrap':defAtom(jQuery::'/javascript':symbol).
'/bootstrap':projection(jQuery::'/javascript':symbol,'/bootstrap':label(! ($))).
procedure('main2'(Str),jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(console),!log),['/javascript':str(!'Before')])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr(jQuery),['/javascript':str(!'#test')]),!text),[inlineTerm(Str::'/bootstrap':string)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(console),!log),['/javascript':str(!'After')]))])).
'/bootstrap':signature(foreach(Goal,Command)::procedure,[Goal::'/bootstrap':pred,Command::jsCommand]).
'/bootstrap':projection(foreach(Goal,Command)::procedure,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!for),'/bootstrap':brackets('/bootstrap':vis(Goal::'/bootstrap':pred),40,41),'/bootstrap':label(!'{')]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Command::jsCommand)]),'/bootstrap':label(!'}')])).
'/bootstrap':alias(foreach(Goal,Command)::procedure,!for).
cjs:procedureCommand(foreach(Goal,Command),ConcreteCommand):-Goal,builtin:concreteCommand(Command,ConcreteCommand).
'/bootstrap':signature(do(Cmd)::procedure,[Cmd::jsCommand]).
'/bootstrap':projection(do(Cmd)::procedure,'/bootstrap':horiz(['/bootstrap':label(!do),'/bootstrap':vis(Cmd::jsCommand)])).
cjs:procedureCommand(do(Cmd),ConcCmd):-builtin:concreteCommand(Cmd,ConcCmd).
