'/bootstrap':sigProj(def(Pred,Action,Next,Cmd)::'/bootstrap':statement,[Pred::statePred,Action::'/javascript/jsLogic':jsCommand,Next::'/javascript/jsLogic':jsCommand,Cmd::'/javascript/jsLogic':jsCommand],'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!'state predicate'),'/bootstrap':vis(Pred::statePred),'/bootstrap':label(!triggers),'/bootstrap':vis(Action::'/javascript/jsLogic':jsCommand),'/bootstrap':label(!'and finally'),'/bootstrap':vis(Next::'/javascript/jsLogic':jsCommand)]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Cmd::'/javascript/jsLogic':jsCommand)])])).
'/bootstrap':alias(def(Pred,Action,Next,'/javascript/jsLogic':jsCommand([]))::'/bootstrap':statement,!'state predicate').
'/bootstrap':disabled((def(Pred,Action,Next,Cmd)~>'/javascript/jsLogic':procedure(whenever(Pred,Action,Next),Cmd))).
'/bootstrap':signature('for (s)'(Pred,Action)::'/javascript/asyncproc':asyncProc,[Pred::statePred,Action::'/javascript/jsLogic':jsCommand]).
'/bootstrap':projection('for (s)'(Pred,Action)::'/javascript/asyncproc':asyncProc,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!for),'/bootstrap':halfSize('/bootstrap':label(!'(s)')),'/bootstrap':brackets('/bootstrap':vis(Pred::statePred),40,41)]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Action::'/javascript/jsLogic':jsCommand)])])).
def(Pred,Action,Next,Cmd)~>annotation:shrink(('/javascript/asyncproc':asyncProc('for (s)'(Pred,Action),'/javascript/jsLogic':do(Next),CmdPrime):-builtin:concreteCommand(Cmd,CmdPrime))).
annotation:shrink('/bootstrap':tip('/javascript/jsLogic':procedure(whenever(Pred,Action,Next),Cmd)::'/bootstrap':statement,Path,VNs,cpi:edit(Path,def(Pred,Action,Next,Cmd)::'/bootstrap':statement,VNs))).
'/javascript/jsLogic':procedure(test:testStatePred,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure(whenever(stateEval(stateApplyBinOp('/cedalionWeb/node':get(expr('/Functional':const(!'http://cedalion.org'))),'/Functional':concat,expr('/Functional':const(!'XXX'))),'/bootstrap':string,S),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(S::'/bootstrap':string)]))]),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':log(!'Finito'))])))])).
