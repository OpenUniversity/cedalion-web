'/bootstrap':signature(catch(Proc,Exception,Catch)::asyncProc,[Proc::asyncProc,Exception::'/javascript/jsLogic':exception,Catch::asyncProc]).
'/bootstrap':projection(catch(Proc,Exception,Catch)::asyncProc,'/bootstrap':vert(['/bootstrap':label(!try),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Proc::asyncProc)]),'/bootstrap':horiz(['/bootstrap':label(!catch),'/bootstrap':vis(Exception::'/javascript/jsLogic':exception)]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Catch::asyncProc)])])).
'/bootstrap':alias(catch(block([]),Exception,block([]))::asyncProc,!try).
asyncProc(catch(Proc,Exception,Catch),Next,'/javascript/jsLogic':jsCommand(['/javascript':var(Prev,'/javascript':call('/javascript':dot('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!ctx),['/javascript':str(!exceptionHandler)]),!getValue),['/javascript':varExpr('/javascript/jsLogic':logic)])),'/javascript':var(Handler,'/javascript':function([ExceptionPrime],['/javascript':var(Handled,'/javascript':false),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Exception::'/javascript/jsLogic':exception='/javascript/jsLogic':jsExpr('/javascript':varExpr(ExceptionPrime))::'/javascript/jsLogic':exception,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure(andThen(Catch,Next)),'/javascript':assign('/javascript':varExpr(Handled),'/javascript':true)]))),'/javascript':if('/javascript':op('/javascript':varExpr(Handled),'/javascript':eq,'/javascript':false),['/javascript':if('/javascript':op('/javascript/jsLogic':typeof('/javascript':varExpr(Prev)),'/javascript':eq,'/javascript':str(!function)),['/javascript':exprStatement('/javascript':call('/javascript':varExpr(Prev),['/javascript':varExpr(ExceptionPrime)]))],[]),'/javascript/jsLogic':runProcedure(Next)],[])])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!ctx),['/javascript':str(!exceptionHandler)]),!bind),['/javascript':varExpr(Handler),'/javascript':varExpr('/javascript/jsLogic':logic)])),'/javascript/jsLogic':runProcedure(andThen(Proc,Next))])):-builtin:true.
'/bootstrap':signature(throw(Exception)::asyncProc,[Exception::'/javascript/jsLogic':exception]).
asyncProc(throw(Exception),Next,'/javascript/jsLogic':jsCommand(['/javascript':var(Handler,'/javascript':call('/javascript':dot('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!ctx),['/javascript':str(!exceptionHandler)]),!getValue),['/javascript':varExpr('/javascript/jsLogic':logic)])),'/javascript':if('/javascript':op('/javascript/jsLogic':typeof('/javascript':varExpr(Handler)),'/javascript':eq,'/javascript':str(!function)),['/javascript':exprStatement('/javascript':call('/javascript':varExpr(Handler),['/javascript/jsLogic':inlineTerm(Exception::'/javascript/jsLogic':exception)]))],[])])):-builtin:true.
'/bootstrap':signature(log(Str)::'/javascript/jsLogic':procedure,[Str::'/bootstrap':string]).
'/javascript/jsLogic':procedure(log(Str),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(Str::'/bootstrap':string)]))])).
'/bootstrap':defAtom(helloException::'/javascript/jsLogic':exception).
'/bootstrap':defAtom('testThrow1'::asyncProc).
procDef('testThrow1',block([sync(log(!'Hello1')),catch(block([throw(helloException),sync(log(!'Mondi1'))]),helloException,block([sync(log(!'World1'))]))])).
'/bootstrap':defAtom('testThrow2'::asyncProc).
procDef('testThrow2',block([sync(log(!'Hello2')),sync(log(!'World2')),throw(helloException),sync(log(!'Mondi2'))])).
'/bootstrap':defAtom(otherException::'/javascript/jsLogic':exception).
'/bootstrap':defAtom('testThrow3Helper'::asyncProc).
procDef('testThrow3Helper',block([catch(block([throw(helloException)]),otherException,block([sync(log(!'Mondi3'))]))])).
'/bootstrap':defAtom('testThrow3'::asyncProc).
procDef('testThrow3',block([sync(log(!'Hello3')),catch(block(['testThrow3Helper']),helloException,block([sync(log(!'World3'))]))])).
'/bootstrap':defAtom(test:testThrow::'/javascript/jsLogic':procedure).
'/javascript/jsLogic':procedure(test:testThrow,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure(andThen('testThrow1',andThen('testThrow3',andThen('testThrow2',log(!'Done')))))])).
