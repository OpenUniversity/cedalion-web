'/bootstrap':signature(modelMerge(Model1,Model2)::'/javascript/statepred':statePred,[Model1::'/javascript/jsLogic':jsExpr,Model2::'/javascript/jsLogic':jsExpr]).
'/bootstrap':signature(not(Expr)::'/javascript':expr,[Expr::'/javascript':expr]).
'/bootstrap':projection(not(Expr)::'/javascript':expr,'/bootstrap':horiz(['/bootstrap':label(! (!)),'/bootstrap':vis(Expr::'/javascript':expr)])).
'/javascript':hasSpecialRendering(not(Expr)::'/javascript':expr,Str):-'/Functional':eval('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(!'!('),'/Functional':concat,'/javascript':toString(Expr::'/javascript':expr)),'/Functional':concat,'/Functional':const(!')')),'/bootstrap':string,Str).
'/javascript/statepred':def(modelMerge(ModelTo,ModelFrom),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript':var(Changes,'/javascript':json([])),'/javascript':for_in(Key,'/javascript/jsLogic':inlineTerm(ModelFrom::'/javascript/jsLogic':jsExpr),['/javascript':var(Source,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(ModelFrom::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key))),'/javascript':if('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(ModelTo::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key)),['/javascript':var(Target,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(ModelTo::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key))),annotation:comment('/javascript':if('/javascript':op('/javascript':dot('/javascript':varExpr(Source),!h),'/javascript':and,'/javascript':op('/javascript':dot('/javascript':varExpr(Target),!v),'/javascript':ne,'/javascript':dot('/javascript':varExpr(Source),!v))),['/javascript':if('/javascript':arrayElement('/javascript':dot('/javascript':varExpr(Source),!h),'/javascript':dot('/javascript':varExpr(Target),!v)),['/javascript':assign('/javascript':arrayElement('/javascript':varExpr(Changes),'/javascript':varExpr(Key)),'/javascript':dot('/javascript':varExpr(Target),!v)),'/javascript':assign('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(ModelTo::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key)),'/javascript':varExpr(Source))],[annotation:comment('/javascript':if('/javascript':op('/javascript/jsLogic':typeof('/javascript':arrayElement('/javascript':dot('/javascript':varExpr(Target),!h),'/javascript':dot('/javascript':varExpr(Source),!v))),'/javascript':eq,'/javascript':str(!undefined)),['/javascript':assign('/javascript':arrayElement('/javascript':varExpr(Changes),'/javascript':varExpr(Key)),'/javascript':dot('/javascript':varExpr(Target),!v)),'/javascript/jsLogic':runProcedure(markConflict(ModelTo,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Target)),'/javascript/jsLogic':jsExpr('/javascript':varExpr(Source))))],[]),!conflict)])],[]),!'if Key is a role where the source and target are pointing to different content')],['/javascript':assign('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(ModelTo::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key)),'/javascript':varExpr(Source)),'/javascript':if('/javascript':dot('/javascript':varExpr(Source),!h),['/javascript':assign('/javascript':arrayElement('/javascript':varExpr(Changes),'/javascript':varExpr(Key)),undefined)],[])])]),'/javascript/jsLogic':runProcedure(notifyModelChanges(ModelTo,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Changes)))),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Action)),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Finally))])).
'/bootstrap':disabled('/javascript/statepred':def(modelMerge(Model1,Model2),Action,Finally,'/javascript/jsLogic':jsCommand([annotation:comment('/javascript':var(Q,'/javascript':array(['/javascript':op('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model1::'/javascript/jsLogic':jsExpr),'/javascript':str(!':name')),'/javascript':plus,'/javascript':str(!'-A'))])),!'Initialize a queue with the root role.  This queue will allow us to BFS over the model'),'/javascript':while('/javascript':op('/javascript':dot('/javascript':varExpr(Q),!length),'/javascript':gt,'/javascript':const(0)),['/javascript':var(Role,'/javascript':call('/javascript':dot('/javascript':varExpr(Q),!shift),[])),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(mergeUUIDForRole(Model1,Model2,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Role)),UUID),'/javascript/statepred':conj(uuidContent(UUID,Model1,Content),'/javascript/statepred':pred(Content::termDescriptor=compound(Name,Arity,Type)::termDescriptor))),'/javascript/jsLogic':jsCommand(['/javascript':var(I,'/javascript':const(0)),'/javascript':while('/javascript':op('/javascript':varExpr(I),'/javascript':lt,'/javascript/jsLogic':inlineTerm(Arity::'/bootstrap':number)),['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(Q),!push),['/javascript':op('/javascript':op('/javascript/jsLogic':inlineTerm(UUID::'/bootstrap':string),'/javascript':plus,'/javascript':str(! (-))),'/javascript':plus,'/javascript':call('/javascript':dot('/javascript':varExpr('String'),!fromCharCode),['/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(65))]))])),'/javascript':if('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model2::'/javascript/jsLogic':jsExpr),'/javascript':op('/javascript/jsLogic':inlineTerm(UUID::'/bootstrap':string),'/javascript':plus,'/javascript':call('/javascript':dot('/javascript':varExpr('String'),!fromCharCode),['/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(65))]))),[annotation:shrink('/javascript':assign('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model1::'/javascript/jsLogic':jsExpr),'/javascript':op('/javascript/jsLogic':inlineTerm(UUID::'/bootstrap':string),'/javascript':plus,'/javascript':call('/javascript':dot('/javascript':varExpr('String'),!fromCharCode),['/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(65))]))),'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model2::'/javascript/jsLogic':jsExpr),'/javascript':op('/javascript/jsLogic':inlineTerm(UUID::'/bootstrap':string),'/javascript':plus,'/javascript':call('/javascript':dot('/javascript':varExpr('String'),!fromCharCode),['/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(65))])))))],[]),'/javascript':assign('/javascript':varExpr(I),'/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(1)))])])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))]),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Action)),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Finally))]))).
'/bootstrap':signature(mergeUUIDForRole(Model1,Model2,Role,UUID)::'/javascript/statepred':statePred,[Model1::'/javascript/jsLogic':jsExpr,Model2::'/javascript/jsLogic':jsExpr,Role::'/bootstrap':string,UUID::'/bootstrap':string]).
annotation:shrink('/javascript/statepred':clause(mergeUUIDForRole(Model1,Model2,Role,UUID),'/javascript/statepred':conj(roleToUUID(Role,Model1,UUID1),'/javascript/statepred':conj(roleToUUID(Role,Model2,UUID2),'/javascript/statepred':if('/javascript/statepred':pred(UUID1::'/bootstrap':string=UUID2::'/bootstrap':string),'/javascript/statepred':conj('/javascript/statepred':pred(UUID::'/bootstrap':string=UUID1::'/bootstrap':string),'/javascript/statepred':conj('/javascript/statepred':if('/javascript/statepred':not(hasKey('/javascript/statepred':expr('/Functional':const(Model1)),'/javascript/statepred':expr('/Functional':const(UUID)))),'/javascript/asyncproc':doProc(assignField(Model1,UUID,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),UUID))),'/javascript/statepred':pred(builtin:true)),'/javascript/statepred':if('/javascript/statepred':not(hasKey('/javascript/statepred':expr('/Functional':const(Model1)),'/javascript/statepred':expr('/Functional':const(Role)))),'/javascript/asyncproc':doProc(assignField(Model1,Role,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),Role))),'/javascript/statepred':pred(builtin:true)))),'/javascript/statepred':if('/javascript/statepred':not(hasKey('/javascript/statepred':expr('/Functional':const(Model2)),'/javascript/statepred':expr('/Functional':const(Role)))),'/javascript/statepred':pred(UUID::'/bootstrap':string=UUID1::'/bootstrap':string),'/javascript/statepred':if('/javascript/statepred':not(hasKey('/javascript/statepred':expr('/Functional':const(Model1)),'/javascript/statepred':expr('/Functional':const(Role)))),'/javascript/statepred':conj('/javascript/statepred':pred(UUID::'/bootstrap':string=UUID2::'/bootstrap':string),'/javascript/statepred':conj('/javascript/asyncproc':doProc(assignField(Model1,UUID,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),UUID2))),'/javascript/asyncproc':doProc(assignField(Model1,Role,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),Role))))),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model1)),Role),'/javascript/jsLogic':jsExpr,Role1),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),Role),'/javascript/jsLogic':jsExpr,Role2),'/javascript/statepred':if(hasKey('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Role1)),!h),'/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Role2)),!v))),'/javascript/statepred':pred(UUID::'/bootstrap':string=UUID1::'/bootstrap':string),'/javascript/statepred':if(hasKey('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Role2)),!h),'/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Role1)),!v))),'/javascript/statepred':conj('/javascript/statepred':pred(UUID::'/bootstrap':string=UUID2::'/bootstrap':string),'/javascript/statepred':conj('/javascript/asyncproc':doProc(assignField(Model1,UUID,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),UUID2))),'/javascript/asyncproc':doProc(assignField(Model1,Role,'/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model2)),Role))))),markConflict(Model1,Model2,Role,UUID)))))))))))).
'/bootstrap':signature(hasKey(Struct,Key)::'/javascript/statepred':statePred,[Struct::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr),Key::'/javascript/statepred':stateExpr('/bootstrap':string)]).
'/bootstrap':projection(hasKey(Struct,Key)::'/javascript/statepred':statePred,'/bootstrap':horiz(['/bootstrap':vis(Struct::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr)),'/bootstrap':label(!'has key'),'/bootstrap':vis(Key::'/javascript/statepred':stateExpr('/bootstrap':string))])).
'/javascript/statepred':def(hasKey(Struct,Key),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj('/javascript/statepred':stateEval(Struct,'/javascript/jsLogic':jsExpr,StructPrime),'/javascript/statepred':stateEval(Key,'/bootstrap':string,KeyPrime)),'/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(StructPrime::'/javascript/jsLogic':jsExpr),'/javascript/jsLogic':inlineTerm(KeyPrime::'/bootstrap':string)),['/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Action))],[])])),'/javascript/jsLogic':do(Finally)))])).
'/bootstrap':signature(assignField(Object,Field,Expr)::'/javascript/asyncproc':asyncProc,[Object::'/javascript/jsLogic':jsExpr,Field::'/bootstrap':string,Expr::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr)]).
'/bootstrap':projection(assignField(Object,Field,Expr)::'/javascript/asyncproc':asyncProc,'/bootstrap':horiz(['/bootstrap':label(!let),'/bootstrap':vis(Object::'/javascript/jsLogic':jsExpr),'/bootstrap':brackets('/bootstrap':vis(Field::'/bootstrap':string),91,93),'/bootstrap':label(! (=)),'/bootstrap':vis(Expr::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr))])).
'/javascript/asyncproc':procDef(assignField(Object,Field,Expr),'/javascript/statepred':'for (s)'('/javascript/statepred':stateEval(Expr,'/javascript/jsLogic':jsExpr,Value),'/javascript/jsLogic':jsCommand(['/javascript':assign('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Object::'/javascript/jsLogic':jsExpr),'/javascript/jsLogic':inlineTerm(Field::'/bootstrap':string)),'/javascript/jsLogic':inlineTerm(Value::'/javascript/jsLogic':jsExpr))]))).
'/bootstrap':signature(markConflict(Model1,Model2,Role,UUID)::'/javascript/statepred':statePred,[Model1::'/javascript/jsLogic':jsExpr,Model2::'/javascript/jsLogic':jsExpr,Role::'/bootstrap':string,UUID::'/bootstrap':string]).
'/javascript/statepred':def(markConflict(Model1,Model2,Role,UUID),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript':var(Role1,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model1::'/javascript/jsLogic':jsExpr),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string))),'/javascript':var(Role2,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model2::'/javascript/jsLogic':jsExpr),'/javascript/jsLogic':inlineTerm(Role::'/bootstrap':string))),'/javascript':for_in(UUID2,'/javascript':dot('/javascript':varExpr(Role2),!h),['/javascript':assign('/javascript':arrayElement('/javascript':dot('/javascript':varExpr(Role1),!h),'/javascript':varExpr(UUID2)),'/javascript':const(1))]),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(uuid(UUID),'/javascript/asyncproc':doProc('/javascript/asyncproc':sync(modelUpdate(Model1,Role,UUID,annotation:escape(annotation:conflict(termWithUUID('/javascript/jsLogic':jsExpr('/javascript':dot('/javascript':varExpr(Role1),!v))),termWithUUID('/javascript/jsLogic':jsExpr('/javascript':dot('/javascript':varExpr(Role2),!v)))))::_)))),Action),'/javascript/jsLogic':do(Finally)))])).
'/bootstrap':signature(annotation:escape(annotation:conflict(A,B))::T,[A::T,B::T]).
'/bootstrap':projection(annotation:escape(annotation:conflict(A,B))::T,'/bootstrap':raised('/bootstrap':lineBorder('/bootstrap':background('/bootstrap':horiz(['/bootstrap':lowered('/bootstrap':background('/bootstrap':vis(A::T),cpi:rgb(255,255,255))),'/bootstrap':lowered('/bootstrap':background('/bootstrap':vis(B::T),cpi:rgb(255,255,255)))]),cpi:rgb(255,0,0)),3,cpi:rgb(255,0,0)))).
'/bootstrap':signature(notifyModelChanges(ModelTo,Changes)::'/javascript/jsLogic':procedure,[ModelTo::'/javascript/jsLogic':jsExpr,Changes::'/javascript/jsLogic':jsExpr]).
'/javascript/jsLogic':procedure(notifyModelChanges(Model,Changes),'/javascript/jsLogic':jsCommand(['/javascript':for_in(Key,'/javascript/jsLogic':inlineTerm(Changes::'/javascript/jsLogic':jsExpr),['/javascript/jsLogic':runProcedure(modelUpdated(Model,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Key)),'/javascript/jsLogic':jsExpr('/javascript':dot('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key)),!v)),'/javascript/jsLogic':jsExpr('/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Changes::'/javascript/jsLogic':jsExpr),'/javascript':varExpr(Key)))))])])).
'/bootstrap':signature(markConflict(Model,Target,Source)::'/javascript/jsLogic':procedure,[Model::'/javascript/jsLogic':jsExpr,Target::'/javascript/jsLogic':jsExpr,Source::'/javascript/jsLogic':jsExpr]).
'/javascript/jsLogic':procedure(markConflict(Model,Target,Source),'/javascript/jsLogic':jsCommand(['/javascript':for_in(UUID,'/javascript':dot('/javascript/jsLogic':inlineTerm(Source::'/javascript/jsLogic':jsExpr),!h),['/javascript':assign('/javascript':arrayElement('/javascript':dot('/javascript/jsLogic':inlineTerm(Source::'/javascript/jsLogic':jsExpr),!h),'/javascript':varExpr(UUID)),'/javascript':const(1))]),'/javascript':assign('/javascript':arrayElement('/javascript':dot('/javascript/jsLogic':inlineTerm(Target::'/javascript/jsLogic':jsExpr),!h),'/javascript':dot('/javascript/jsLogic':inlineTerm(Target::'/javascript/jsLogic':jsExpr),!v)),'/javascript':const(1)),'/javascript':assign('/javascript':arrayElement('/javascript':dot('/javascript/jsLogic':inlineTerm(Target::'/javascript/jsLogic':jsExpr),!h),'/javascript':dot('/javascript/jsLogic':inlineTerm(Source::'/javascript/jsLogic':jsExpr),!v)),'/javascript':const(1)),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'(uuid(ConflictUUID),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure(modelUpdate(Model,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Key)),ConflictUUID,annotation:escape(annotation:conflict(termWithUUID('/javascript/jsLogic':jsExpr('/javascript':dot('/javascript/jsLogic':inlineTerm(Target::'/javascript/jsLogic':jsExpr),!v))),termWithUUID('/javascript/jsLogic':jsExpr('/javascript':dot('/javascript/jsLogic':inlineTerm(Source::'/javascript/jsLogic':jsExpr),!v)))))::_)),'/javascript':assign('/javascript':dot('/javascript/jsLogic':inlineTerm(Target::'/javascript/jsLogic':jsExpr),!v),'/javascript/jsLogic':inlineTerm(ConflictUUID::'/bootstrap':string))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])).
