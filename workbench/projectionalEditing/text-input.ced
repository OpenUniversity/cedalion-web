'/javascript/jsLogic':procedure(bindFeature(textEntry,Elem),'/javascript/jsLogic':jsCommand(['/javascript':var(Editor,'/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!parents),['/javascript':str(!'.cedalion-editor')])),'/javascript':var(Textbar,'/javascript':call('/javascript':dot('/javascript':varExpr(Editor),!find),['/javascript':str(!'.input-entry input')])),'/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':on(Elem,!selected,'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(Textbar),!focus),[]))])))])).
'/bootstrap':defAtom(autocompleteContext::'/bootstrap':type).
'/bootstrap':signature(autocomplete(Contexts)::feature,[Contexts::'/bootstrap':set(autocompleteContext)]).
'/javascript/jsLogic':procedure(editorKeyPressed(Model,Ev,Text,Elem,autocomplete(Contexts)),'/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':op('/javascript':op('/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!keyCode),'/javascript':eq,'/javascript':const(32)),'/javascript':and,'/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!ctrlKey)),['/javascript':var(Editor,'/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!parents),['/javascript':str(!'.cedalion-editor')])),'/javascript':var(AutoCompleteMenu,'/javascript':call('/javascript':dot('/javascript':varExpr(Editor),!find),['/javascript':str(!'.autocomplete-menu')])),'/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':changeContent('/javascript/jsLogic':jsExpr('/javascript':varExpr(AutoCompleteMenu)),autocompleteMenu(Model,'/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_role)])),Text,Contexts))),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr('/javascript/jsLogic':jQuery),['/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!target)]),!val),['/javascript':str(!'')]))],[])])).
'/bootstrap':defAtom(textualLanguage::'/bootstrap':type).
'/bootstrap':signature(texutalEntry(Languages)::feature,[Languages::'/bootstrap':set(textualLanguage)]).
'/javascript/jsLogic':procedure(editorKeyPressed(Model,Ev,Text,Elem,texutalEntry(Languages)),'/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':op('/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!keyCode),'/javascript':eq,'/javascript':const(13)),['/javascript':var(Role,'/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_role)])),'/javascript':var(Prefix,'/javascript':call('/javascript':dot('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!parents),['/javascript':str(!'.cedalion-editor')]),!attr),['/javascript':str(!ced_prefix)])),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(('/bootstrap':member(Language,Languages,textualLanguage),parse(Text,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Prefix)),'/javascript/jsLogic':jsExpr('/javascript':varExpr(Role)),Language,Cmd)),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen(applyEditingCommand(Cmd,Model),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))]))),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr('/javascript/jsLogic':jQuery),['/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!target)]),!val),['/javascript':str(!'')]))],[])])).
'/bootstrap':signature(keyboardCommand(Keys,Role,Map,Cmd)::'/bootstrap':pred,[Keys::keyCombination,Role::'/bootstrap':string,Map::keyboardMap,Cmd::editingCommand]).
'/bootstrap':projection(keyboardCommand(Keys,Role,Map,Cmd)::'/bootstrap':pred,'/bootstrap':horiz(['/bootstrap':label(!'key combination'),'/bootstrap':vis(Keys::keyCombination),'/bootstrap':label(!'under keymap'),'/bootstrap':vis(Map::keyboardMap),'/bootstrap':label(!'on role'),'/bootstrap':vis(Role::'/bootstrap':string),'/bootstrap':label(!triggers),'/bootstrap':vis(Cmd::editingCommand)])).
'/bootstrap':signature(defKeyboardCommand(Keys,Map,Role,Cmd)::'/bootstrap':statement,[Keys::keyCombination,Map::keyboardMap,Role::'/bootstrap':string,Cmd::editingCommand]).
'/bootstrap':projection(defKeyboardCommand(Keys,Map,Role,Cmd)::'/bootstrap':statement,'/bootstrap':horiz(['/bootstrap':label(!'with keyboard map'),'/bootstrap':vis(Map::keyboardMap),'/bootstrap':label(!'on keys'),'/bootstrap':vis(Keys::keyCombination),'/bootstrap':label(!role),'/bootstrap':vis(Role::'/bootstrap':string),'/bootstrap':label(!apply),'/bootstrap':vis(Cmd::editingCommand)])).
defKeyboardCommand(Keys,Map,Role,Cmd)~>keyboardCommand(Keys,Role,Map,Cmd):-builtin:true.
'/bootstrap':defAtom(keyboardMap::'/bootstrap':type).
'/bootstrap':signature(keyboardShortcuts(Map)::feature,[Map::keyboardMap]).
'/javascript/jsLogic':procedure(editorKeyPressed(Model,Ev,!'',Elem,keyboardShortcuts(Map)),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(keyCombination(Ev,Keys),'/javascript/statepred':pred(keyboardCommand(Keys,'/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Elem::'/cedalionWeb/visualization':jQueryElem),!attr),['/javascript':str(!ced_role)])),Map,Cmd))),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(Ev::'/javascript/jsLogic':jsExpr),!preventDefault),[])),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen(applyEditingCommand(Cmd,Model),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))])).
