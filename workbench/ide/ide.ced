'/bootstrap':signature(ide(ModelStore,Model,Editor)::'/cedalionWeb/xml':xml,[ModelStore::modelStore,Model::'/javascript/jsLogic':jsExpr,Editor::'/cedalionWeb/xml':xml]).
'/bootstrap':signature(createEditor(ModelStore,ModelName,Model,Editor,IDE)::'/javascript/jsLogic':procedure,[ModelStore::modelStore,ModelName::'/bootstrap':string,Model::'/javascript/jsLogic':jsExpr,Editor::'/cedalionWeb/xml':xml,IDE::'/cedalionWeb/visualization':jQueryElem]).
'/bootstrap':disabled('/javascript/jsLogic':procedure(createEditor(ModelStore,ModelName,Model,Editor,IDE),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'(modelForName(ModelStore,ModelName,Model),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':changeContent('/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(IDE::'/cedalionWeb/visualization':jQueryElem),!find),['/javascript':str(!'.ide-editor')])),Editor))])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))]))).
'/javascript/jsLogic':procedure(createEditor(ModelStore,ModelName,Model,Editor,IDE),'/javascript/jsLogic':jsCommand(['/javascript':var(ModelPrime,'/javascript':json([])),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/workbench/projectionalEditing':modelUpdate('/javascript/jsLogic':jsExpr('/javascript':varExpr(ModelPrime)),!root,'/workbench/projectionalEditing':editorContent(1,[])::'/workbench/projectionalEditing':editorContent),'/javascript/jsLogic':foreach(Model::'/javascript/jsLogic':jsExpr='/javascript/jsLogic':jsExpr('/javascript':varExpr(ModelPrime))::'/javascript/jsLogic':jsExpr,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':changeContent('/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(IDE::'/cedalionWeb/visualization':jQueryElem),!find),['/javascript':str(!'.ide-editor')])),Editor)),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen(updateModelByName(ModelStore,ModelName,Model,'/javascript/jsLogic':jsExpr('/javascript':op('/javascript':arrayElement('/javascript':varExpr(ModelPrime),'/javascript':str(!root)),'/javascript':plus,'/javascript':str(!'-B')))),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand([]))))]))))])).
annotation:shrink('/cedalionWeb/xml':macro(ide(ModelStore,Model,Editor),annotation:shrink('/cedalionWeb/jquery':animate(ID,'/cedalionWeb/xml':'elem2'('/Functional':const(!div),['/cedalionWeb/xml':'attr2'('/Functional':const(!class),'/Functional':const(!ide)),'/cedalionWeb/xml':'attr2'('/Functional':const(!id),'/Functional':const(ID))],'/cedalionWeb/xml':list('/cedalionWeb/xml':'elem2'('/Functional':const(!div),['/cedalionWeb/xml':'attr2'('/Functional':const(!class),'/Functional':const(!'ide-file-tree'))],'/cedalionWeb/xml':list('/cedalionWeb/ui':tree(folders(modelNames(ModelStore),! (/)),folder),'/cedalionWeb/xml':empty)),'/cedalionWeb/xml':list('/cedalionWeb/xml':'elem2'('/Functional':const(!div),['/cedalionWeb/xml':'attr2'('/Functional':const(!class),'/Functional':const(!'ide-editor'))],'/cedalionWeb/xml':empty),'/cedalionWeb/xml':empty))),IDE,'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(IDE::'/cedalionWeb/visualization':jQueryElem),!on),['/javascript':str(!modelSelected),'/javascript/statepred':async(annotation:shrink('/javascript':function([Ev,ModelName],['/javascript/jsLogic':runProcedure(createEditor(ModelStore,'/javascript/jsLogic':jsExpr('/javascript':varExpr(ModelName)),Model,Editor,IDE))])))]))]))))).
'/javascript/jsLogic':procedure('/cedalionWeb/ui':onTreeSelection(leaf(File,Path),folder,TreeItem),'/javascript/jsLogic':jsCommand(['/javascript':var(IDE,'/javascript':call('/javascript':dot('/javascript/jsLogic':inlineTerm(TreeItem::'/cedalionWeb/visualization':jQueryElem),!parents),['/javascript':str(!'.ide')])),'/javascript':if('/javascript':op('/javascript':dot('/javascript':varExpr(IDE),!length),'/javascript':eq,'/javascript':const(0)),['/javascript':return],[]),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(IDE),!trigger),['/javascript':str(!modelSelected),'/javascript':array(['/javascript/jsLogic':inlineTerm(Path::'/bootstrap':string)])]))])).
'/javascript/jsLogic':procedure(test:ide,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':openPage(ide(loadedStatementsMS,Model,'/workbench/projectionalEditing':editor(Model,!root,'/workbench/projectionalEditing':defaultEditorFeatures,!'TBD'))))])).
