'/bootstrap':signature(fileMS(Path,MT)::modelStore(MT),[Path::'/bootstrap':string,MT::'/bootstrap':type]).
'/javascript/statepred':setDef(modelNames(fileMS(Path,MT),MT),'/bootstrap':string,commandOutputLines('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(!'find "'),'/Functional':concat,'/Functional':const(Path)),'/Functional':concat,'/Functional':const(!'" -type f -name "*.json"')))).
'/bootstrap':signature(commandOutputLines(Cmd)::'/javascript/statepred':stateSet('/bootstrap':string),[Cmd::'/Functional':expr('/bootstrap':string)]).
'/javascript/statepred':def('/javascript/statepred':member(Line,'/bootstrap':string,commandOutputLines(Cmd)),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript':var(HandleOutput,'/javascript/statepred':async('/javascript':function([_,StdOut,_],['/javascript':var(Lines,'/javascript':call('/javascript':dot('/javascript':varExpr(StdOut),!split),['/javascript':str(!'
')])),'/javascript':var(I,'/javascript':const(0)),'/javascript':while('/javascript':op('/javascript':varExpr(I),'/javascript':lt,'/javascript':dot('/javascript':varExpr(Lines),!length)),['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Line::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':arrayElement('/javascript':varExpr(Lines),'/javascript':varExpr(I)))::'/bootstrap':string,Action)),'/javascript':assign('/javascript':varExpr(I),'/javascript':op('/javascript':varExpr(I),'/javascript':plus,'/javascript':const(1)))]),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':do(Finally))]))),'/javascript':var(Exec,'/javascript':dot('/javascript':call('/javascript':varExpr('/cedalionWeb/node':require),['/javascript':str(!child_process)]),!exec)),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/Functional':eval(Cmd,'/bootstrap':string,CmdPrime),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':varExpr(Exec),['/javascript/jsLogic':inlineTerm(CmdPrime::'/bootstrap':string),'/javascript':varExpr(HandleOutput)]))])))])).
'/javascript/statepred':clause(modelForName(fileMS(Path,MT),Name,Model,MT),'/javascript/statepred':stateEval('/cedalionWeb/node':json(fileContent('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(Path),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(Name)))),'/javascript/jsLogic':jsExpr,Model)).
'/bootstrap':signature(fileContent(PathExpr)::'/javascript/statepred':stateExpr('/bootstrap':string),[PathExpr::'/Functional':expr('/bootstrap':string)]).
'/javascript/statepred':def('/javascript/statepred':stateEval(fileContent(PathExpr),'/bootstrap':string,Content),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript':var(FS,'/javascript':call('/javascript':varExpr('/cedalionWeb/node':require),['/javascript':str(!fs)])),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/Functional':eval(PathExpr,'/bootstrap':string,Path),'/javascript/jsLogic':jsCommand(['/javascript':var(Stream,'/javascript':call('/javascript':dot('/javascript':varExpr(FS),!createReadStream),['/javascript/jsLogic':inlineTerm(Path::'/bootstrap':string)])),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/cedalionWeb/node':streamContent('/javascript/jsLogic':jsExpr('/javascript':varExpr(Stream)),Content),Action),'/javascript/jsLogic':do(Finally)))])))])).
'/javascript/asyncproc':procDef(save(fileMS(Path,MT),Model,MT),'/javascript/statepred':'for (s)'('/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model)),!':name')),'/bootstrap':string,Name),'/javascript/statepred':conj('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(Path),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(Name)),'/bootstrap':string,FullPath)),'/javascript/statepred':stateEval('/cedalionWeb/node':jsonStringify(Model),'/bootstrap':string,Content))),'/javascript/jsLogic':jsCommand(['/javascript':var(Stream,'/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr('/cedalionWeb/node':require),['/javascript':str(!fs)]),!createWriteStream),['/javascript/jsLogic':inlineTerm(FullPath::'/bootstrap':string)])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(Stream),!end),['/javascript/jsLogic':inlineTerm(Content::'/bootstrap':string)]))]))).
'/javascript/asyncproc':procDef(newModel(fileMS(Path,MT),Name,MT),'/javascript/statepred':'for (s)'('/javascript/statepred':pred('/Functional':eval('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(Path),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(Name)),'/bootstrap':string,FullPath)),'/javascript/jsLogic':jsCommand(['/javascript':var(Stream,'/javascript':call('/javascript':dot('/javascript':call('/javascript':varExpr('/cedalionWeb/node':require),['/javascript':str(!fs)]),!createWriteStream),['/javascript/jsLogic':inlineTerm(FullPath::'/bootstrap':string)])),'/javascript':var(Model,'/javascript':json(['/javascript':bind('/javascript':str(!':name'),'/javascript/jsLogic':inlineTerm(Name::'/bootstrap':string))])),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(Stream),!end),['/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':'JSON'),!stringify),['/javascript':varExpr(Model)])]))]))).
