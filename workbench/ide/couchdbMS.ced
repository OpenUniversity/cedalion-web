'/bootstrap':signature(couchdbMS(MT)::modelStore(MT),[MT::'/bootstrap':type]).
'/bootstrap':signature(couchBaseURL(BaseURL)::'/javascript/statepred':statePred,[BaseURL::'/bootstrap':string]).
'/javascript/statepred':clause(couchBaseURL(BaseURL),'/javascript/statepred':conj('/cedalionWeb/url':browserURL('/cedalionWeb/url':url(HTTP,Host,Path,_,_)),'/javascript/statepred':pred(('/cedalionWeb/url':pathToList(Path,[Database|_]),'/Functional':eval('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(HTTP),'/Functional':concat,'/Functional':const(!'://')),'/Functional':concat,'/Functional':const(Host)),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(Database)),'/bootstrap':string,BaseURL))))).
'/javascript/statepred':setDef(modelNames(couchdbMS(MT),MT),'/bootstrap':string,'/javascript/statepred':set(DecodedPath,'/javascript/statepred':conj(couchBaseURL(BaseURL),'/javascript/statepred':conj('/cedalionWeb/node':arrayElement('/cedalionWeb/node':dot('/cedalionWeb/node':json('/cedalionWeb/http':get('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(!'/_all_docs')))),!rows),Row),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Row)),!id)),'/bootstrap':string,DecodedPath),'/javascript/statepred':pred(builtin:strcat(! (/),_,DecodedPath))))))).
'/bootstrap':signature(decodeURIComponent(Str)::'/javascript/statepred':stateExpr('/bootstrap':string),[Str::'/javascript/statepred':stateExpr('/bootstrap':string)]).
'/javascript/statepred':def('/javascript/statepred':stateEval(decodeURIComponent(Encoded),'/bootstrap':string,Decoded),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':stateEval(Encoded,'/bootstrap':string,Enc),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Decoded::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':call('/javascript':varExpr('/workbench/projectionalEditing':decodeURIComponent),['/javascript/jsLogic':inlineTerm(Enc::'/bootstrap':string)]))::'/bootstrap':string,Action))])),'/javascript/jsLogic':do(Finally)))])).
'/bootstrap':signature(encodeURIComponent(Decoded)::'/javascript/statepred':stateExpr('/bootstrap':string),[Decoded::'/javascript/statepred':stateExpr('/bootstrap':string)]).
'/javascript/statepred':def('/javascript/statepred':stateEval(encodeURIComponent(Decoded),'/bootstrap':string,Encoded),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':stateEval(Decoded,'/bootstrap':string,Dec),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Encoded::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':call('/javascript':varExpr('/cedalionWeb/node':encodeURIComponent),['/javascript/jsLogic':inlineTerm(Dec::'/bootstrap':string)]))::'/bootstrap':string,Action))])),'/javascript/jsLogic':do(Finally)))])).
'/javascript/statepred':clause(modelForName(couchdbMS(MT),Name,Model,MT),'/javascript/statepred':stateEval('/javascript/statepred':where(fromJSON('/cedalionWeb/http':get('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(EncName)))),'/javascript/statepred':conj(couchBaseURL(BaseURL),'/javascript/statepred':stateEval(encodeURIComponent('/javascript/statepred':expr('/Functional':const(Name))),'/bootstrap':string,EncName))),'/javascript/jsLogic':jsExpr,Model)).
'/bootstrap':disabled('/javascript/asyncproc':procDef(save(couchdbMS(MT),Model,MT),'/javascript/statepred':'for (s)'('/javascript/statepred':conj(couchBaseURL(BaseURL),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model)),!':name')),'/bootstrap':string,ModelName),'/javascript/statepred':conj('/javascript/statepred':stateEval(encodeURIComponent('/javascript/statepred':expr('/Functional':const(ModelName))),'/bootstrap':string,EncodedName),'/cedalionWeb/http':httpReq('/cedalionWeb/http':http(!'PUT','/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(EncodedName)),['/cedalionWeb/http':header(!'content-type','/Functional':const(!'application/json; charset=UTF-8'))],toJSON('/javascript/statepred':expr('/Functional':const(Model))),Status,_,_))))),'/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':op('/javascript/jsLogic':inlineTerm(Status::'/bootstrap':number),'/javascript':ne,'/javascript':const(201)),[],[])])))).
'/javascript/asyncproc':asyncProc(save(couchdbMS(MT),Model,MT),After,'/javascript/jsLogic':jsCommand(['/javascript':var(OK,'/javascript':false),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(couchBaseURL(BaseURL),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':string('/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(Model)),!':name')),'/bootstrap':string,ModelName),'/javascript/statepred':conj('/javascript/statepred':stateEval(encodeURIComponent('/javascript/statepred':expr('/Functional':const(ModelName))),'/bootstrap':string,EncodedName),'/javascript/statepred':conj('/javascript/statepred':stateEval('/cedalionWeb/node':json('/cedalionWeb/http':get('/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(EncodedName)))),'/javascript/jsLogic':jsExpr,CurrentModel),'/javascript/statepred':conj('/workbench/projectionalEditing':modelMerge(Model,CurrentModel),'/javascript/statepred':conj('/javascript/asyncproc':doProc('/workbench/projectionalEditing':assignField(Model,!'_rev','/cedalionWeb/node':dot('/javascript/statepred':expr('/Functional':const(CurrentModel)),!'_rev'))),'/cedalionWeb/http':httpReq('/cedalionWeb/http':http(!'PUT','/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(EncodedName)),['/cedalionWeb/http':header(!'content-type','/Functional':const(!'application/json; charset=UTF-8'))],toJSON('/javascript/statepred':expr('/Functional':const(Model))),201,_,_)))))))),'/javascript/jsLogic':jsCommand(['/javascript':assign('/javascript':varExpr(OK),'/javascript':true)])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':varExpr(OK),['/javascript/jsLogic':runProcedure(After)],[])]))))])):-builtin:true.
'/javascript/asyncproc':asyncProc(newModel(couchdbMS(MT),ModelName,MT),After,'/javascript/jsLogic':jsCommand(['/javascript':var(OK,'/javascript':false),'/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':conj(couchBaseURL(BaseURL),'/javascript/statepred':conj('/javascript/statepred':stateEval(encodeURIComponent('/javascript/statepred':expr('/Functional':const(ModelName))),'/bootstrap':string,EncodedName),'/cedalionWeb/http':httpReq('/cedalionWeb/http':http(!'PUT','/Functional':applyBinOp('/Functional':applyBinOp('/Functional':const(BaseURL),'/Functional':concat,'/Functional':const(! (/))),'/Functional':concat,'/Functional':const(EncodedName)),['/cedalionWeb/http':header(!'content-type','/Functional':const(!'application/json; charset=UTF-8'))],'/cedalionWeb/node':jsonStringify('/javascript/jsLogic':jsExpr('/javascript':json(['/javascript':bind('/javascript':str(!':name'),'/javascript/jsLogic':inlineTerm(ModelName::'/bootstrap':string))]))),201,_,_)))),'/javascript/jsLogic':jsCommand(['/javascript':assign('/javascript':varExpr(OK),'/javascript':true)])),'/javascript/jsLogic':do('/javascript/jsLogic':jsCommand(['/javascript':if('/javascript':varExpr(OK),['/javascript/jsLogic':runProcedure(After)],[])]))))])):-builtin:true.
'/bootstrap':signature(fromJSON(StrExpr)::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr),[StrExpr::'/javascript/statepred':stateExpr('/bootstrap':string)]).
'/javascript/statepred':def('/javascript/statepred':stateEval(fromJSON(StrExpr),'/javascript/jsLogic':jsExpr,JS),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':stateEval(StrExpr,'/bootstrap':string,Str),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(JS::'/javascript/jsLogic':jsExpr='/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!fromJSON),['/javascript/jsLogic':inlineTerm(Str::'/bootstrap':string)]))::'/javascript/jsLogic':jsExpr,Action))])),'/javascript/jsLogic':do(Finally)))])).
'/bootstrap':signature(toJSON(Model)::'/javascript/statepred':stateExpr('/bootstrap':string),[Model::'/javascript/statepred':stateExpr('/javascript/jsLogic':jsExpr)]).
'/javascript/statepred':def('/javascript/statepred':stateEval(toJSON(JSExpr),'/bootstrap':string,Str),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':stateEval(JSExpr,'/javascript/jsLogic':jsExpr,JS),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(Str::'/bootstrap':string='/javascript/jsLogic':jsExpr('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!toJSON),['/javascript/jsLogic':inlineTerm(JS::'/javascript/jsLogic':jsExpr)]))::'/bootstrap':string,Action))])),'/javascript/jsLogic':do(Finally)))])).
'/javascript/jsLogic':procedure('/cedalionWeb/url':app(!cedcouch),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/cedalionWeb/jquery':openPage(ide(couchdbMS('/workbench/projectionalEditing':editorContent),Model,'/workbench/projectionalEditing':editorContent,'/workbench/cedalion':cedalionEditor(Model,Name,'/workbench/projectionalEditing':defaultEditorFeatures),Name)))])).
