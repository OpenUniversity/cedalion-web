'/bootstrap':signature(modelStore(ModelType)::'/bootstrap':type,[ModelType::'/bootstrap':type]).
'/bootstrap':defAtom(loadedStatementsMS::modelStore('/workbench/projectionalEditing':editorContent)).
'/bootstrap':signature(modelNames(MS,MT)::'/javascript/statepred':stateSet('/bootstrap':string),[MS::modelStore(MT),MT::'/bootstrap':type]).
'/javascript/statepred':setDef(modelNames(loadedStatementsMS,'/workbench/projectionalEditing':editorContent),'/bootstrap':string,unique('/javascript/statepred':set(File,'/javascript/statepred':pred(builtin:loadedStatement(File,_,_))))).
'/bootstrap':signature(modelForName(ModelStore,Name,Model,MT)::'/javascript/statepred':statePred,[ModelStore::modelStore(MT),Name::'/bootstrap':string,Model::'/javascript/jsLogic':jsExpr,MT::'/bootstrap':type]).
'/javascript/statepred':def(modelForName(loadedStatementsMS,Name,Model,'/workbench/projectionalEditing':editorContent),Action,Finally,'/javascript/jsLogic':jsCommand(['/javascript':var(ModelPrime,'/javascript':json(['/javascript':bind('/javascript':str(!':name'),'/javascript/jsLogic':inlineTerm(Name::'/bootstrap':string))])),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach((builtin:findall(Statement,'/bootstrap':statement, (builtin:loadedStatement(Name,StatementPrime,VNs),'/workbench/cedalion':concreteVariables(StatementPrime::'/bootstrap':statement,VNs,Statement::'/bootstrap':statement)),Statements),'/Functional':eval('/Functional':applyBinOp('/Functional':const(Name),'/Functional':concat,'/Functional':const(!'-A')),'/bootstrap':string,Role)),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/workbench/projectionalEditing':modelUpdate('/javascript/jsLogic':jsExpr('/javascript':varExpr(ModelPrime)),Role,'/workbench/projectionalEditing':editorContent(1,Statements)::'/workbench/projectionalEditing':editorContent),'/javascript/asyncproc':andThen('/javascript/statepred':'for (s)'('/javascript/statepred':pred(Model::'/javascript/jsLogic':jsExpr='/javascript/jsLogic':jsExpr('/javascript':varExpr(ModelPrime))::'/javascript/jsLogic':jsExpr),Action),'/javascript/jsLogic':do(Finally))))])))])).
'/bootstrap':signature(updateModelByName(MS,Name,Model,MT,Role)::'/javascript/asyncproc':asyncProc,[MS::modelStore(MT),Name::'/bootstrap':string,Model::'/javascript/jsLogic':jsExpr,MT::'/bootstrap':type,Role::'/bootstrap':string]).
'/bootstrap':disabled(('/javascript/asyncproc':asyncProc(updateModelByName(loadedStatementsMS,Name,Model,'/workbench/projectionalEditing':editorContent,Role),After,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach(builtin:findall(Statement,'/bootstrap':statement, (builtin:loadedStatement(Name,StatementPrime,VNs),'/workbench/cedalion':concreteVariables(StatementPrime::'/bootstrap':statement,VNs,Statement::'/bootstrap':statement)),Statements),'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/asyncproc':andThen('/workbench/projectionalEditing':modelUpdate(Model,Role,Statements::'/bootstrap':list('/bootstrap':statement)),After))])))])):-builtin:true)).
'/bootstrap':defAtom(alert::'/javascript':symbol).
'/bootstrap':signature(save(ModelStore,Model,MT)::'/javascript/asyncproc':asyncProc,[ModelStore::modelStore(MT),Model::'/javascript/jsLogic':jsExpr,MT::'/bootstrap':type]).
'/javascript/asyncproc':procDef(save(loadedStatementsMS,Model,'/workbench/projectionalEditing':editorContent),'/javascript/asyncproc':sync('/javascript/jsLogic':do('/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':varExpr(alert),['/javascript':op('/javascript':op('/javascript':str(!'Read only model '),'/javascript':plus,'/javascript':arrayElement('/javascript/jsLogic':inlineTerm(Model::'/javascript/jsLogic':jsExpr),'/javascript':str(!':name'))),'/javascript':plus,'/javascript':str(!' cannot be saved'))]))])))).
'/bootstrap':signature(newModel(MS,Name,MT)::'/javascript/asyncproc':asyncProc,[MS::modelStore(MT),Name::'/bootstrap':string,MT::'/bootstrap':type]).
'/javascript/asyncproc':procDef(newModel(loadedStatementsMS,Name,'/workbench/projectionalEditing':editorContent),'/javascript/asyncproc':sync('/javascript/jsLogic':do('/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':varExpr(alert),['/javascript':op('/javascript':op('/javascript':str(!'Read only modelstore. Model  '),'/javascript':plus,'/javascript/jsLogic':inlineTerm(Name::'/bootstrap':string)),'/javascript':plus,'/javascript':str(!' cannot be created'))]))])))).
