'/bootstrap':signature(annotation:escape(annotation:statement(S))::'/bootstrap':pred,[S::'/bootstrap':statement]).
'/bootstrap':projection(annotation:escape(annotation:statement(S))::'/bootstrap':pred,'/bootstrap':brackets('/bootstrap':vis(S::'/bootstrap':statement),8739,8739)).
'/bootstrap':signature(statementToClause(S,H,B)::'/bootstrap':pred,[S::'/bootstrap':statement,H::'/bootstrap':pred,B::'/bootstrap':pred]).
statementToClause(S,H,B):-builtin:if(S::'/bootstrap':statement= (H:-B)::'/bootstrap':statement,builtin:true,builtin:if(S::'/bootstrap':statement= (S1~>S2)::'/bootstrap':statement, (statementToClause(S2,H,BPrime),B::'/bootstrap':pred= (annotation:statement(S1),BPrime)::'/bootstrap':pred), (H::'/bootstrap':pred=annotation:statement(S)::'/bootstrap':pred,B::'/bootstrap':pred=builtin:true::'/bootstrap':pred))).
'/bootstrap':signature(clauses(Statements)::'/bootstrap':set('/bootstrap':statement),[Statements::'/bootstrap':set('/bootstrap':statement)]).
'/bootstrap':setDef(clauses(Statements),'/bootstrap':set((H:-B), ('/bootstrap':member(Annotated,Statements,'/bootstrap':statement),builtin:removeAnnotations(Annotated::'/bootstrap':statement,S::'/bootstrap':statement),statementToClause(S,H,B))),'/bootstrap':statement).
'/bootstrap':defAtom(allClauses::'/bootstrap':set('/bootstrap':statement)).
'/bootstrap':setDef(allClauses,'/bootstrap':union('/javascript/jsLogic':allClauses,'/javascript/jsLogic':fastGenClauses),'/bootstrap':statement).
'/javascript/jsLogic':procedure(test:compile,'/javascript/jsLogic':jsCommand(['/javascript':var(FS,'/javascript':call('/javascript':varExpr('/cedalionWeb/node':require),['/javascript':str(!fs)])),'/javascript':var(WriteStream,'/javascript':call('/javascript':dot('/javascript':varExpr(FS),!createWriteStream),['/javascript':str(!'cedalion.new.js')])),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/bootstrap':member(St,'/javascript/jsLogic':jsStatementsForClauses('/javascript/jsLogic':allClauses),'/javascript':statement),'/javascript/jsLogic':jsCommand(['/javascript':var(Target,'/javascript':json(['/javascript':bind('/javascript':str(!s),'/javascript':str(!''))])),'/javascript/jsLogic':runProcedure('/javascript/jsLogic':generateJavascript(St::'/javascript':statement,cpi:default,'/javascript/jsLogic':jsExpr('/javascript':varExpr(Target)))),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript':dot('/javascript':varExpr(Target),!s)]))]))),'/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr(WriteStream),!end),[]))])).
'/bootstrap':defAtom(compiler:generateClauses::'/javascript/jsLogic':procedure).
'/javascript/jsLogic':procedure(compiler:generateClauses,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/bootstrap':member(Clause,easyClauses,'/bootstrap':statement),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!termToProlog),['/javascript/jsLogic':inlineTerm(Clause::'/bootstrap':statement)])]))])))])).
'/bootstrap':signature(tracing(Set)::'/bootstrap':set('/bootstrap':statement),[Set::'/bootstrap':set('/bootstrap':statement)]).
'/bootstrap':signature(compiler:trace(H)::'/bootstrap':pred,[H::'/bootstrap':pred]).
'/bootstrap':setDef(tracing(Set),'/bootstrap':set((H:-compiler:trace(H),B),'/bootstrap':member((H:-B),Set,'/bootstrap':statement)),'/bootstrap':statement).
'/bootstrap':defAtom(easyClauses::'/bootstrap':set('/bootstrap':statement)).
'/bootstrap':setDef(easyClauses,'/bootstrap':union('/bootstrap':union(clauses('/bootstrap':statements),'/bootstrap':set((annotation:statement(S1):-builtin:fail),'/bootstrap':member((S1~>_),'/bootstrap':statements,'/bootstrap':statement))),'/javascript/jsLogic':loadedStatementClauses),'/bootstrap':statement).
'/bootstrap':defAtom(compiler:generateClausesWithTracing::'/javascript/jsLogic':procedure).
'/javascript/jsLogic':procedure(compiler:generateClausesWithTracing,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/bootstrap':member(Clause,tracing(easyClauses),'/bootstrap':statement),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':logic),!termToProlog),['/javascript/jsLogic':inlineTerm(Clause::'/bootstrap':statement)])]))])))])).
'/bootstrap':signature(compiler:jsString(S)::'/bootstrap':pred,[S::'/bootstrap':string]).
compiler:jsString(S):-'/bootstrap':member(S,'/javascript/jsLogic':jsStatementStrings('/bootstrap':union('/javascript/jsLogic':jsStatementsForClauses('/javascript/jsLogic':allClauses),'/javascript/jsLogic':withoutAnnotations('/javascript/jsLogic':jsStatementsForClauses('/javascript/jsLogic':loadedStatementClauses)))),'/bootstrap':string).
compiler:test(X):-'/bootstrap':member(X,'/javascript/jsLogic':jsStatementsForClauses('/javascript/jsLogic':allClauses),'/javascript':statement).
