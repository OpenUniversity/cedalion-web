'/bootstrap':defAtom(symbols::'/workbench/projectionalEditing':autocompleteContext).
annotation:shrink('/javascript/statepred':clause('/workbench/projectionalEditing':autocompletion('/bootstrap':visualization,Prefix,Role,'/workbench/projectionalEditing':editingCommand(Role,_::'/bootstrap':visualization,'/bootstrap':symbol(Unicode)::'/bootstrap':visualization),Text,symbols),'/javascript/statepred':pred(autocompleteSymbols(Prefix,Text,Unicode)))).
'/bootstrap':signature(autocompleteSymbols(Prefix,Text,Unicode)::'/bootstrap':pred,[Prefix::'/bootstrap':string,Text::'/bootstrap':string,Unicode::'/bootstrap':number]).
annotation:shrink(('/bootstrap':symbolRange(Group,From,To)~>annotation:shrink((autocompleteSymbols(Prefix,Text,Unicode):-builtin:strcat(Prefix,_,Group),'/bootstrap':member(Unicode,range(From,To),'/bootstrap':number),'/Functional':eval('/Functional':applyBinOp('/Functional':const(Group),'/Functional':concat,'/Functional':applyBinOp('/Functional':const(!': '),'/Functional':concat,'/workbench/projectionalEditing':charForCode('/Functional':const(Unicode)))),'/bootstrap':string,Text))))).
'/bootstrap':unitTest(builtin:findall(X,'/bootstrap':number,autocompleteSymbols(!'ASC',_,X),[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127])).
'/bootstrap':unitTest(autocompleteSymbols(!'ASC',!'ASCII: {',123)).
'/bootstrap':signature(range(From,To)::'/bootstrap':set('/bootstrap':number),[From::'/bootstrap':number,To::'/bootstrap':number]).
'/bootstrap':setDef(range(From,To),'/bootstrap':union('/bootstrap':singleton(From),'/bootstrap':set(X, (To>From,builtin:succ(From,FromPrime),'/bootstrap':member(X,range(FromPrime,To),'/bootstrap':number)))),'/bootstrap':number).
'/bootstrap':unitTest(builtin:findall(X,'/bootstrap':number,'/bootstrap':member(X,range(1,10),'/bootstrap':number),[1,2,3,4,5,6,7,8,9,10])).
'/javascript/jsLogic':procedure(test:range,'/javascript/jsLogic':jsCommand(['/javascript/jsLogic':runProcedure('/javascript/jsLogic':foreach('/bootstrap':member(X,range(1,10),'/bootstrap':number),'/javascript/jsLogic':jsCommand(['/javascript':exprStatement('/javascript':call('/javascript':dot('/javascript':varExpr('/javascript/jsLogic':console),!log),['/javascript/jsLogic':inlineTerm(X::'/bootstrap':number)]))])))])).
