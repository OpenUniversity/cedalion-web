'/cedalionWeb/parsing':defSymbol(! (=),'/workbench/projectionalEditing':tCed).
'/bootstrap':signature(expr(Prefix,Expr,T)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[Prefix::'/bootstrap':string,Expr::'/Functional':expr(T),T::'/bootstrap':type]).
'/cedalionWeb/parsing':prod('/workbench/projectionalEditing':term(Prefix,Expr::'/Functional':expr(T)),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow('/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (=))),expr(Prefix,Expr,T))).
'/cedalionWeb/parsing':prod(expr(Prefix,Expr,T),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow(multExpr(Prefix,Seed,T),exprSuffix(Prefix,Seed,T,Expr))).
'/bootstrap':signature(exprSuffix(Prefix,Seed,T,Expr)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[Prefix::'/bootstrap':string,Seed::'/Functional':expr(T),T::'/bootstrap':type,Expr::'/Functional':expr(T)]).
'/cedalionWeb/parsing':prod(exprSuffix(P,Expr,T,Expr),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':empty).
'/cedalionWeb/parsing':prod(exprSuffix(P,Seed,T,Expr),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow('/cedalionWeb/parsing':follow(additiveOp(Op,T),expr(P,Other,T)),exprSuffix(P,'/Functional':applyBinOp(Seed,Op,Other),T,Expr))).
'/bootstrap':signature(additiveOp(Op,T)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[Op::'/Functional':binOp(T),T::'/bootstrap':type]).
'/cedalionWeb/parsing':defSymbol(! (+),'/workbench/projectionalEditing':tCed).
'/cedalionWeb/parsing':prod(additiveOp('/Functional':numPlus,'/bootstrap':number),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (+)))).
'/cedalionWeb/parsing':prod(additiveOp('/Functional':concat,'/bootstrap':string),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (+)))).
'/cedalionWeb/parsing':defSymbol(! (-),'/workbench/projectionalEditing':tCed).
'/cedalionWeb/parsing':prod(additiveOp('/Functional':minus,'/bootstrap':number),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (-)))).
'/bootstrap':signature(multExpr(Prefix,Seed,T)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[Prefix::'/bootstrap':string,Seed::'/Functional':expr(T),T::'/bootstrap':type]).
'/cedalionWeb/parsing':prod(multExpr(P,Expr,T),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow(atomicExpr(P,Seed,T),multSuffix(P,Seed,T,Expr))).
'/bootstrap':signature(multSuffix(P,Seed,T,Expr)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[P::'/bootstrap':string,Seed::'/Functional':expr(T),T::'/bootstrap':type,Expr::'/Functional':expr(T)]).
'/cedalionWeb/parsing':prod(multSuffix(P,Seed,T,Seed),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':empty).
'/cedalionWeb/parsing':prod(multSuffix(P,Seed,T,Expr),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow('/cedalionWeb/parsing':follow(multOp(OP,T),multExpr(P,Other,T)),multSuffix(P,'/Functional':applyBinOp(Seed,OP,Other),T,Expr))).
'/bootstrap':signature(multOp(OP,T)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[OP::'/Functional':binOp(T),T::'/bootstrap':type]).
'/cedalionWeb/parsing':defSymbol(! (*),'/workbench/projectionalEditing':tCed).
'/cedalionWeb/parsing':prod(multOp('/Functional':times,'/bootstrap':number),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (*)))).
'/cedalionWeb/parsing':defSymbol(! (/),'/workbench/projectionalEditing':tCed).
'/cedalionWeb/parsing':prod(multOp('/Functional':divBy,'/bootstrap':number),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(! (/)))).
'/bootstrap':signature(atomicExpr(P,Expr,T)::'/cedalionWeb/parsing':pattern('/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed)),[P::'/bootstrap':string,Expr::'/Functional':expr(T),T::'/bootstrap':type]).
'/cedalionWeb/parsing':prod(atomicExpr(P,'/Functional':const(Str),'/bootstrap':string),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/workbench/projectionalEditing':stringToken(Str))).
'/cedalionWeb/parsing':prod(atomicExpr(P,'/Functional':const(Num),'/bootstrap':number),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal('/workbench/projectionalEditing':numberToken(Num))).
'/cedalionWeb/parsing':prod(atomicExpr(P,annotation:escape(annotation:parentheses(Expr)),T),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':follow('/cedalionWeb/parsing':follow('/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(!'(')),expr(P,Expr,T)),'/cedalionWeb/parsing':terminal('/cedalionWeb/parsing':symbol(!')')))).
'/cedalionWeb/parsing':prod(atomicExpr(P,var(Name),T),'/cedalionWeb/parsing':token('/workbench/projectionalEditing':tCed),'/cedalionWeb/parsing':terminal(variableName(Name))).
'/bootstrap':unitTest('/cedalionWeb/parsing':lexParseString('/workbench/projectionalEditing':term(!test,'/Functional':applyBinOp('/Functional':const(1),'/Functional':numPlus,'/Functional':applyBinOp('/Functional':const(2),'/Functional':times,'/Functional':const(3)))::'/Functional':expr('/bootstrap':number)),!'=1+2*3','/workbench/projectionalEditing':tCed)).
'/bootstrap':unitTest('/cedalionWeb/parsing':lexParseString('/workbench/projectionalEditing':term(!test,'/Functional':applyBinOp(annotation:escape(annotation:parentheses('/Functional':applyBinOp('/Functional':const(1),'/Functional':numPlus,'/Functional':const(2)))),'/Functional':times,'/Functional':const(3))::'/Functional':expr('/bootstrap':number)),!'=(1+2)*3','/workbench/projectionalEditing':tCed)).
'/bootstrap':unitTest('/cedalionWeb/parsing':lexParseString('/workbench/projectionalEditing':term(!test,'/Functional':applyBinOp(var(!'A'),'/Functional':numPlus,'/Functional':applyBinOp(var(!'B'),'/Functional':times,var(!'C')))::'/Functional':expr('/bootstrap':number)),!'=A+B*C','/workbench/projectionalEditing':tCed)).
