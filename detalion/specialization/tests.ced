'/detalion':unitTest('/detalion':conj('/detalion':eq(Goal::'/detalion':pred,'/detalion':applyOp(Op,T,A,B,V)::'/detalion':pred),'/detalion':conj(det:specialize(annotation:shrink('/detalion':clause(specialize('/detalion':eval(Goal,Source,Type,Target),GoalEval,ClIn,ClOut),'/detalion':conj('/detalion':eval(specialize(Goal,GoalPrime1,ClIn,ClOutPrime),annotation:parentheses('/Functional':pair(GoalPrime1,'/Functional':pair(ClOutPrime,'/Functional':pair(Source,Goal)))),'/Functional':pairType('/detalion':pred,'/Functional':pairType('/bootstrap':list('/bootstrap':statement),'/Functional':pairType(Type,'/detalion':pred))),annotation:parentheses('/Functional':pair(GoalPrime,'/Functional':pair(ClOut,'/Functional':pair(SourcePrime,GoalCopy))))),'/detalion':if('/detalion':eq(GoalPrime::'/detalion':pred,'/detalion':true::'/detalion':pred),specializeUnification(SourcePrime::Type,Target::Type,'/detalion':true,GoalEval),'/detalion':conj(specializeUnification(SourcePrime::Type,Source::Type,'/detalion':eval(GoalPrime,SourcePrime,Type,Target),GoalEval),'/detalion':eq(GoalCopy::'/detalion':pred,Goal::'/detalion':pred)))))),'/detalion':clause(Head,Body),[]),'/detalion':conj('/detalion':trace('/detalion':eq(Head::'/detalion':pred,specialize('/detalion':eval('/detalion':applyOp('/Functional':numPlus,'/bootstrap':number,1,2,Three),Three,'/bootstrap':number,ThreePrime),EvalGoalBar,[],ClOutBar)::'/detalion':pred)),'/detalion':conj('/detalion':trace(Body),'/detalion':conj('/detalion':trace(EvalGoalBar),'/detalion':trace('/detalion':equals(ThreePrime,3,'/bootstrap':number)))))))).
'/detalion':unitTest('/detalion':conj('/detalion':eq(Goal::'/detalion':pred,'/detalion':applyOp(Op,T,A,B,V)::'/detalion':pred),'/detalion':conj(det:specialize(annotation:shrink('/detalion':clause(specialize('/detalion':eval(Goal,Source,Type,Target),GoalEval,ClIn,ClOut),'/detalion':conj('/detalion':eval(specialize(Goal,GoalPrime1,ClIn,ClOutPrime),annotation:parentheses('/Functional':pair(GoalPrime1,'/Functional':pair(ClOutPrime,'/Functional':pair(Source,Goal)))),'/Functional':pairType('/detalion':pred,'/Functional':pairType('/bootstrap':list('/bootstrap':statement),'/Functional':pairType(Type,'/detalion':pred))),annotation:parentheses('/Functional':pair(GoalPrime,'/Functional':pair(ClOut,'/Functional':pair(SourcePrime,GoalCopy))))),'/detalion':if('/detalion':eq(GoalPrime::'/detalion':pred,'/detalion':true::'/detalion':pred),specializeUnification(SourcePrime::Type,Target::Type,'/detalion':true,GoalEval),'/detalion':conj(specializeUnification(SourcePrime::Type,Source::Type,'/detalion':eval(GoalPrime,SourcePrime,Type,Target),GoalEval),'/detalion':eq(GoalCopy::'/detalion':pred,Goal::'/detalion':pred)))))),'/detalion':clause(Head,Body),[]),'/detalion':conj('/detalion':trace('/detalion':eq(Head::'/detalion':pred,specialize('/detalion':eval('/detalion':applyOp(OpBar,TBar,ABar,BBar,VBar),VBar,TBar,VBarPrime),EvalGoalBar,[],ClOutBar)::'/detalion':pred)),'/detalion':conj(markDynamic('/detalion':applyOp(OpBar,TBar,ABar,BBar,VBarPrime)::'/detalion':pred),specialize(Body,_,[],_)))))).
'/bootstrap':defAtom(someType::'/bootstrap':type).
'/bootstrap':signature(foo(X,Y)::'/detalion':pred,[X::someType,Y::someType]).
'/bootstrap':signature(test(Foo,X,Z)::'/detalion':pred,[Foo::fooType,X::someType,Z::someType]).
annotation:shrink('/detalion':clause(test(Foo,X,Z),'/detalion':eval(foo(X,Y),Y,someType,Z))).
'/bootstrap':signature(a(X)::someType,[X::someType]).
'/detalion':clause(foo(X,a(X)),'/detalion':true).
'/detalion':unitTest('/detalion':conj(test(foo,X,Z),'/detalion':conj('/detalion':trace(not('/detalion':equals(Z,a(X),someType))),'/detalion':trace('/detalion':eq(Z::someType,a(X)::someType))))).
'/detalion':unitTest('/detalion':conj('/detalion':eq(Goal::'/detalion':pred,'/detalion':eq(A,B)::'/detalion':pred),'/detalion':conj('/detalion':markDynamic(Goal,'/detalion':pred),specialize(Goal,_,[],[])))).
'/detalion':unitTest('/detalion':conj('/detalion':eq(Foo::fooType,foo::fooType),'/detalion':conj('/detalion':trace(det:specialize('/detalion':clause('test1'(Foo),'/detalion':conj('/detalion':eval('/detalion':plus(1,2,X),X,'/bootstrap':number,Three),'/detalion':eval('/detalion':plus(Three,2,X),X,'/bootstrap':number,5))),'/detalion':clause(Head,Body),[])),'/detalion':trace(not('/detalion':var(Body,'/detalion':pred)))))).
'/detalion':unitTest(specialize(specialize('/detalion':conj('/detalion':eval(specialize(_,_,_,_),_,_,_),_),_,_,_),_,[],_)).
'/detalion':unitTest('/detalion':conj('/detalion':eq(Goal::'/detalion':pred,'/detalion':eval('/detalion':conj(_,_),_,_,_)::'/detalion':pred),'/detalion':conj('/detalion':markDynamic(Goal,'/detalion':pred),specialize(Goal,_,[],_)))).
'/detalion':unitTest('/detalion':conj('/detalion':eq(Goal::'/detalion':pred,'/detalion':conj(_,_)::'/detalion':pred),'/detalion':conj('/detalion':markDynamic(Goal,'/detalion':pred),normalize(Goal,_)))).
