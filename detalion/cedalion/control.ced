'/bootstrap':signature(goalInst(Goal,Inst)::instantiator(Type),[Goal::'/bootstrap':pred,Inst::instantiator(Type)]).
'/detalion':clause(instantiate(goalInst(Goal,Inst),Type,List),cedalion(Goal,Inst,Type,List)).
'/detalion':clause(cedalion((G1,G2),Inst,Type,Result),cedalion(G1,goalInst(G2,Inst),Type,Result)).
'/detalion':clause(cedalion(builtin:true,Inst,Type,List),instantiate(Inst,Type,List)).
'/detalion':clause(cedalion(builtin:fail,_,_,_),'/detalion':fail).
'/detalion':clause(cedalion(builtin:if(Cond,Then,Else),Inst,Type,Result),'/detalion':conj('/detalion':debug(!if,Cond::'/bootstrap':pred),'/detalion':if(cedalion(Cond,term(Then),'/bootstrap':pred,[ThenPrime|_]),cedalion(ThenPrime,Inst,Type,Result),cedalion(Else,Inst,Type,Result)))).
'/detalion':clause(cedalion(A=A,Inst,Type,List),instantiate(Inst,Type,List)).
'/detalion':clause(cedalion(builtin:compound(TTerm),Inst,Type,List),'/detalion':conj('/detalion':compound(TTerm),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:var(TTerm),Inst,Type,List),'/detalion':conj('/detalion':var(TTerm),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:string(TTerm),Inst,Type,List),'/detalion':conj('/detalion':string(TTerm),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:number(TTerm),Inst,Type,List),'/detalion':conj('/detalion':number(TTerm),instantiate(Inst,Type,List))).
'/bootstrap':defAtom(dummyInst::instantiator('/bootstrap':number)).
'/detalion':clause(instantiate(dummyInst,'/bootstrap':number,[0]),'/detalion':true).
'/detalion':clause(cedalion(\+G,Inst,Type,List),'/detalion':conj('/detalion':if(cedalion(G,dummyInst,'/bootstrap':number,[_|_]),'/detalion':fail,'/detalion':true),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:parseTerm(TTerm,Name,Args),Inst,Type,List),'/detalion':conj('/detalion':parseTerm(TTerm,Name,Args),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:copyTerm(TTerm1,TTerm2),Inst,Type,List),'/detalion':conj('/detalion':copyTerm(TTerm1,TTerm2,'/bootstrap':typedTerm),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:findall(Term,T,G,L),Inst,Type,List),'/detalion':conj('/detalion':if(cedalion(G,term(Term),T,L),'/detalion':true,'/detalion':eq(L::'/bootstrap':list(T),[]::'/bootstrap':list(T))),instantiate(Inst,Type,List))).
