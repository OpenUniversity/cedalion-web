'/bootstrap':signature(goalInst(Goal,Inst)::instantiator(Type),[Goal::'/bootstrap':pred,Inst::instantiator(Type)]).
'/detalion':clause(instantiate(goalInst(Goal,Inst),Type,List),cedalion(Goal,Inst,Type,List)).
'/detalion':clause(cedalion((G1,G2),Inst,Type,Result),cedalion(G1,goalInst(G2,Inst),Type,Result)).
'/detalion':clause(cedalion(builtin:true,Inst,Type,List),instantiate(Inst,Type,List)).
'/detalion':clause(cedalion(builtin:fail,_,_,_),'/detalion':fail).
'/detalion':clause(cedalion(builtin:if(Cond,Then,Else),Inst,Type,Result),'/detalion':if(cedalion(Cond,term(Cond),'/bootstrap':pred,[CondPrime|_]),'/detalion':conj('/detalion':eq(CondPrime::'/bootstrap':pred,Cond::'/bootstrap':pred),cedalion(Then,Inst,Type,Result)),cedalion(Else,Inst,Type,Result))).
'/detalion':clause(cedalion(A=A,Inst,Type,List),instantiate(Inst,Type,List)).
'/detalion':clause(cedalion(builtin:compound(Term::Type),Inst,T,List),'/detalion':conj('/detalion':compound(Term,Type),instantiate(Inst,T,List))).
'/detalion':clause(cedalion(builtin:var(Term::Type),Inst,T,List),'/detalion':conj('/detalion':var(Term,Type),instantiate(Inst,T,List))).
'/detalion':clause(cedalion(builtin:string(Term::Type),Inst,T,List),'/detalion':conj('/detalion':string(Term,Type),instantiate(Inst,T,List))).
'/detalion':clause(cedalion(builtin:number(Term::Type),Inst,T,List),'/detalion':conj('/detalion':number(Term,Type),instantiate(Inst,T,List))).
'/bootstrap':defAtom(dummyInst::instantiator('/bootstrap':number)).
'/detalion':clause(instantiate(dummyInst,'/bootstrap':number,[0]),'/detalion':true).
'/detalion':clause(cedalion(\+G,Inst,Type,List),'/detalion':conj('/detalion':if(cedalion(G,dummyInst,'/bootstrap':number,[_|_]),'/detalion':fail,'/detalion':true),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:parseTerm(TTerm,Name,Args),Inst,Type,List),'/detalion':conj('/detalion':parseTerm(TTerm,Name,Args),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:copyTerm(TTerm1,TTerm2),Inst,Type,List),'/detalion':conj('/detalion':copyTerm(TTerm1,TTerm2,'/bootstrap':typedTerm),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:findall(Term,T,G,L),Inst,Type,List),'/detalion':conj('/detalion':if(cedalion(G,term(Term),T,L),'/detalion':true,'/detalion':eq(L::'/bootstrap':list(T),[]::'/bootstrap':list(T))),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:equals(Term1::T,Term2::T),Inst,Type,List),'/detalion':conj('/detalion':equals(Term1,Term2,T),instantiate(Inst,Type,List))).
'/detalion':clause(cedalion(builtin:loadedStatement(File,Statement,VarNames),Inst,Type,List),'/detalion':conj('/detalion':findAllMatches('/detalion':statement(Statement,File,VarNames),Matches),evalLoadedStatements(Matches,File,Statement,VarNames,Inst,Type,List))).
'/bootstrap':signature(evalLoadedStatements(Matches,File,Statement,VarNames,Inst,Type,List)::'/detalion':pred,[Matches::'/bootstrap':list('/bootstrap':statement),File::'/bootstrap':string,Statement::'/bootstrap':statement,VarNames::'/bootstrap':list('/bootstrap':varName),Inst::instantiator(Type),Type::'/bootstrap':type,List::'/bootstrap':list(Type)]).
'/detalion':clause(evalLoadedStatements([],_,_,_,_,_,[]),'/detalion':true).
annotation:shrink('/detalion':clause(evalLoadedStatements(['/detalion':statement(StatementPrime,FilePrime,VNsPrime)|Matches],File,Statement,VNs,Inst,Type,List),'/detalion':conj('/detalion':if('/detalion':eval('/detalion':conj('/detalion':eq('/detalion':statement(StatementPrime,FilePrime,VNsPrime)::'/bootstrap':statement,'/detalion':statement(Statement,File,VNs)::'/bootstrap':statement),instantiate(Inst,Type,L1)),L1,'/bootstrap':list(Type),L1Prime),'/detalion':true,'/detalion':eq(L1Prime::'/bootstrap':list(Type),[]::'/bootstrap':list(Type))),'/detalion':conj(evalLoadedStatements(Matches,File,Statement,VNs,Inst,Type,L2),conc(L1Prime,L2,List,Type))))).
'/detalion':clause(cedalion(builtin:removeAnnotations(Term1::T,Term2::T),Inst,Type,List),'/detalion':conj('/detalion':removeAnnotations(Term1,Term2,T),instantiate(Inst,Type,List))).
